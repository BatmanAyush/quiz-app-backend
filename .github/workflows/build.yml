# This workflow defines a full CI/CD pipeline.
# It builds, tests, and then packages the application into a Docker image.

name: Java CI/CD with Maven and Docker

# This section defines when the workflow will run.
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  # Job 1: Build and test the application
  build:
    runs-on: ubuntu-latest
    env:
      SPRING_DATASOURCE_URL: ${{ secrets.DB_URL }}
      SPRING_DATASOURCE_USERNAME: ${{ secrets.DB_USER }}
      SPRING_DATASOURCE_PASSWORD: ${{ secrets.DB_PASS }}
      CLIENT_ID: ${{secrets.CLI_ID}}
      CLIENT_SECRET: ${{secrets.CLI_SEC}}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven

      - name: Build and Test with Maven
        run: mvn -B package --file pom.xml

  # Job 2: Build and push the Docker image
  # This job will only run if the 'build' job completes successfully.
  docker:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    # This ensures that the 'build' job must succeed before this job starts.
    needs: build

    steps:
      # Step 1: Checks out the code, same as the build job.
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 2: Logs into the GitHub Container Registry.
      # The password is a secret Personal Access Token (PAT) you will create.
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GH_PAT }}

      # Step 3: Builds the Docker image and pushes it to the registry.
      # The image is tagged with the unique commit SHA for versioning.
      - name: Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ghcr.io/batmanayush/quiz-app-backend:${{ github.sha }}

